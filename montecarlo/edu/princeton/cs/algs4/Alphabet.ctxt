#BlueJ class context
comment0.target=Alphabet
comment1.params=alpha
comment1.target=Alphabet(java.lang.String)
comment1.text=\r\n\ Initializes\ a\ new\ alphabet\ from\ the\ given\ set\ of\ characters.\r\n\r\n\ @param\ alpha\ the\ set\ of\ characters\r\n
comment10.params=index
comment10.target=char\ toChar(int)
comment10.text=\r\n\ Returns\ the\ character\ corresponding\ to\ the\ argument\ index.\r\n\ \r\n\ @param\ \ index\ the\ index\r\n\ @return\ the\ character\ corresponding\ to\ the\ index\ {@code\ index}\r\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 0\ <\=\ index\ <\ R}\r\n
comment11.params=indices
comment11.target=java.lang.String\ toChars(int[])
comment11.text=\r\n\ Returns\ the\ characters\ corresponding\ to\ the\ argument\ indices.\r\n\ \r\n\ @param\ \ indices\ the\ indices\r\n\ @return\ the\ characters\ corresponding\ to\ the\ indices\ {@code\ indices}\r\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 0\ <\ indices[i]\ <\ R}\r\n\ \ \ \ \ \ \ \ \ for\ every\ {@code\ i}\r\n
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment12.text=\r\n\ Unit\ tests\ the\ {@code\ Alphabet}\ data\ type.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
comment2.params=radix
comment2.target=Alphabet(int)
comment2.text=\r\n\ Initializes\ a\ new\ alphabet\ using\ characters\ 0\ through\ R-1.\r\n\r\n\ @param\ radix\ the\ number\ of\ characters\ in\ the\ alphabet\ (the\ radix\ R)\r\n
comment3.params=
comment3.target=Alphabet()
comment3.text=\r\n\ Initializes\ a\ new\ alphabet\ using\ characters\ 0\ through\ 255.\r\n
comment4.params=c
comment4.target=boolean\ contains(char)
comment4.text=\r\n\ Returns\ true\ if\ the\ argument\ is\ a\ character\ in\ this\ alphabet.\r\n\r\n\ @param\ \ c\ the\ character\r\n\ @return\ {@code\ true}\ if\ {@code\ c}\ is\ a\ character\ in\ this\ alphabet;\r\n\ \ \ \ \ \ \ \ \ {@code\ false}\ otherwise\r\n
comment5.params=
comment5.target=int\ R()
comment5.text=\r\n\ Returns\ the\ number\ of\ characters\ in\ this\ alphabet\ (the\ radix).\r\n\ \r\n\ @return\ the\ number\ of\ characters\ in\ this\ alphabet\r\n\ @deprecated\ Replaced\ by\ {@link\ \#radix()}.\r\n
comment6.params=
comment6.target=int\ radix()
comment6.text=\r\n\ Returns\ the\ number\ of\ characters\ in\ this\ alphabet\ (the\ radix).\r\n\ \r\n\ @return\ the\ number\ of\ characters\ in\ this\ alphabet\r\n
comment7.params=
comment7.target=int\ lgR()
comment7.text=\r\n\ Returns\ the\ binary\ logarithm\ of\ the\ number\ of\ characters\ in\ this\ alphabet.\r\n\ \r\n\ @return\ the\ binary\ logarithm\ (rounded\ up)\ of\ the\ number\ of\ characters\ in\ this\ alphabet\r\n
comment8.params=c
comment8.target=int\ toIndex(char)
comment8.text=\r\n\ Returns\ the\ index\ corresponding\ to\ the\ argument\ character.\r\n\ \r\n\ @param\ \ c\ the\ character\r\n\ @return\ the\ index\ corresponding\ to\ the\ character\ {@code\ c}\r\n\ @throws\ IllegalArgumentException\ unless\ {@code\ c}\ is\ a\ character\ in\ this\ alphabet\r\n
comment9.params=s
comment9.target=int[]\ toIndices(java.lang.String)
comment9.text=\r\n\ Returns\ the\ indices\ corresponding\ to\ the\ argument\ characters.\r\n\ \r\n\ @param\ \ s\ the\ characters\r\n\ @return\ the\ indices\ corresponding\ to\ the\ characters\ {@code\ s}\r\n\ @throws\ IllegalArgumentException\ unless\ every\ character\ in\ {@code\ s}\r\n\ \ \ \ \ \ \ \ \ is\ a\ character\ in\ this\ alphabet\r\n
numComments=13
