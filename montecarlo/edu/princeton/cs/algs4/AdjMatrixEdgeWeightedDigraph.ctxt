#BlueJ class context
comment0.target=AdjMatrixEdgeWeightedDigraph
comment0.text=\r\n\ \ The\ {@code\ AdjMatrixEdgeWeightedDigraph}\ class\ represents\ a\ edge-weighted\r\n\ \ digraph\ of\ vertices\ named\ 0\ through\ <em>V</em>\ -\ 1,\ where\ each\r\n\ \ directed\ edge\ is\ of\ type\ {@link\ DirectedEdge}\ and\ has\ a\ real-valued\ weight.\r\n\ \ It\ supports\ the\ following\ two\ primary\ operations\:\ add\ a\ directed\ edge\r\n\ \ to\ the\ digraph\ and\ iterate\ over\ all\ of\ edges\ incident\ from\ a\ given\ vertex.\r\n\ \ It\ also\ provides\r\n\ \ methods\ for\ returning\ the\ number\ of\ vertices\ <em>V</em>\ and\ the\ number\r\n\ \ of\ edges\ <em>E</em>.\ Parallel\ edges\ are\ disallowed;\ self-loops\ are\ permitted.\r\n\ \ <p>\r\n\ \ This\ implementation\ uses\ an\ adjacency-matrix\ representation.\r\n\ \ All\ operations\ take\ constant\ time\ (in\ the\ worst\ case)\ except\r\n\ \ iterating\ over\ the\ edges\ incident\ from\ a\ given\ vertex,\ which\ takes\r\n\ \ time\ proportional\ to\ <em>V</em>.\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\r\n\ \ see\ <a\ href\="https\://algs4.cs.princeton.edu/44sp">Section\ 4.4</a>\ of\r\n\ \ <i>Algorithms,\ 4th\ Edition</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=V
comment1.target=AdjMatrixEdgeWeightedDigraph(int)
comment1.text=\r\n\ Initializes\ an\ empty\ edge-weighted\ digraph\ with\ {@code\ V}\ vertices\ and\ 0\ edges.\r\n\ @param\ V\ the\ number\ of\ vertices\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ V\ <\ 0}\r\n
comment2.params=V\ E
comment2.target=AdjMatrixEdgeWeightedDigraph(int,\ int)
comment2.text=\r\n\ Initializes\ a\ random\ edge-weighted\ digraph\ with\ {@code\ V}\ vertices\ and\ <em>E</em>\ edges.\r\n\ @param\ V\ the\ number\ of\ vertices\r\n\ @param\ E\ the\ number\ of\ edges\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ V\ <\ 0}\r\n\ @throws\ IllegalArgumentException\ if\ {@code\ E\ <\ 0}\r\n
comment3.params=
comment3.target=int\ V()
comment3.text=\r\n\ Returns\ the\ number\ of\ vertices\ in\ the\ edge-weighted\ digraph.\r\n\ @return\ the\ number\ of\ vertices\ in\ the\ edge-weighted\ digraph\r\n
comment4.params=
comment4.target=int\ E()
comment4.text=\r\n\ Returns\ the\ number\ of\ edges\ in\ the\ edge-weighted\ digraph.\r\n\ @return\ the\ number\ of\ edges\ in\ the\ edge-weighted\ digraph\r\n
comment5.params=e
comment5.target=void\ addEdge(DirectedEdge)
comment5.text=\r\n\ Adds\ the\ directed\ edge\ {@code\ e}\ to\ the\ edge-weighted\ digraph\ (if\ there\r\n\ is\ not\ already\ an\ edge\ with\ the\ same\ endpoints).\r\n\ @param\ e\ the\ edge\r\n
comment6.params=v
comment6.target=java.lang.Iterable\ adj(int)
comment6.text=\r\n\ Returns\ the\ directed\ edges\ incident\ from\ vertex\ {@code\ v}.\r\n\ @param\ v\ the\ vertex\r\n\ @return\ the\ directed\ edges\ incident\ from\ vertex\ {@code\ v}\ as\ an\ Iterable\r\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 0\ <\=\ v\ <\ V}\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Returns\ a\ string\ representation\ of\ the\ edge-weighted\ digraph.\ This\ method\ takes\r\n\ time\ proportional\ to\ <em>V</em><sup>2</sup>.\r\n\ @return\ the\ number\ of\ vertices\ <em>V</em>,\ followed\ by\ the\ number\ of\ edges\ <em>E</em>,\r\n\ \ \ followed\ by\ the\ <em>V</em>\ adjacency\ lists\ of\ edges\r\n
comment8.params=v
comment8.target=void\ validateVertex(int)
comment9.params=args
comment9.target=void\ main(java.lang.String[])
comment9.text=\r\n\ Unit\ tests\ the\ {@code\ AdjMatrixEdgeWeightedDigraph}\ data\ type.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
numComments=10
