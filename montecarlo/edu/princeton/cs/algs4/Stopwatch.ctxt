#BlueJ class context
comment0.target=Stopwatch
comment0.text=\r\n\ \ The\ {@code\ Stopwatch}\ data\ type\ is\ for\ measuring\r\n\ \ the\ time\ that\ elapses\ between\ the\ start\ and\ end\ of\ a\r\n\ \ programming\ task\ (wall-clock\ time).\r\n\r\n\ \ See\ {@link\ StopwatchCPU}\ for\ a\ version\ that\ measures\ CPU\ time.\r\n\ \ For\ additional\ documentation,\r\n\ \ see\ <a\ href\="https\://algs4.cs.princeton.edu/14analysis">Section\ 1.4</a>\ of\r\n\ \ <i>Algorithms,\ 4th\ Edition</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=
comment1.target=Stopwatch()
comment1.text=\r\n\ Initializes\ a\ new\ stopwatch.\r\n
comment2.params=
comment2.target=double\ elapsedTime()
comment2.text=\r\n\ Returns\ the\ elapsed\ CPU\ time\ (in\ seconds)\ since\ the\ stopwatch\ was\ created.\r\n\r\n\ @return\ elapsed\ CPU\ time\ (in\ seconds)\ since\ the\ stopwatch\ was\ created\r\n
comment3.params=args
comment3.target=void\ main(java.lang.String[])
comment3.text=\r\n\ Unit\ tests\ the\ {@code\ Stopwatch}\ data\ type.\r\n\ Takes\ a\ command-line\ argument\ {@code\ n}\ and\ computes\ the\ \r\n\ sum\ of\ the\ square\ roots\ of\ the\ first\ {@code\ n}\ positive\ integers,\r\n\ first\ using\ {@code\ Math.sqrt()},\ then\ using\ {@code\ Math.pow()}.\r\n\ It\ prints\ to\ standard\ output\ the\ sum\ and\ the\ amount\ of\ time\ to\r\n\ compute\ the\ sum.\ Note\ that\ the\ discrete\ sum\ can\ be\ approximated\ by\r\n\ an\ integral\ -\ the\ sum\ should\ be\ approximately\ 2/3\ *\ (n^(3/2)\ -\ 1).\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
numComments=4
