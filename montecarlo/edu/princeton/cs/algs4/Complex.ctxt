#BlueJ class context
comment0.target=Complex
comment0.text=\r\n\ \ The\ {@code\ Complex}\ class\ represents\ a\ complex\ number.\r\n\ \ Complex\ numbers\ are\ immutable\:\ their\ values\ cannot\ be\ changed\ after\ they\r\n\ \ are\ created.\r\n\ \ It\ includes\ methods\ for\ addition,\ subtraction,\ multiplication,\ division,\r\n\ \ conjugation,\ and\ other\ common\ functions\ on\ complex\ numbers.\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\ see\ <a\ href\="https\://algs4.cs.princeton.edu/99scientific">Section\ 9.9</a>\ of\r\n\ \ <i>Algorithms,\ 4th\ Edition</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=real\ imag
comment1.target=Complex(double,\ double)
comment1.text=\r\n\ Initializes\ a\ complex\ number\ from\ the\ specified\ real\ and\ imaginary\ parts.\r\n\r\n\ @param\ real\ the\ real\ part\r\n\ @param\ imag\ the\ imaginary\ part\r\n
comment10.params=
comment10.target=Complex\ conjugate()
comment10.text=\r\n\ Returns\ the\ complex\ conjugate\ of\ this\ complex\ number.\r\n\r\n\ @return\ the\ complex\ conjugate\ of\ this\ complex\ number\r\n
comment11.params=
comment11.target=Complex\ reciprocal()
comment11.text=\r\n\ Returns\ the\ reciprocal\ of\ this\ complex\ number.\r\n\r\n\ @return\ the\ complex\ number\ whose\ value\ is\ {@code\ (1\ /\ this)}\r\n
comment12.params=
comment12.target=double\ re()
comment12.text=\r\n\ Returns\ the\ real\ part\ of\ this\ complex\ number.\r\n\r\n\ @return\ the\ real\ part\ of\ this\ complex\ number\r\n
comment13.params=
comment13.target=double\ im()
comment13.text=\r\n\ Returns\ the\ imaginary\ part\ of\ this\ complex\ number.\r\n\r\n\ @return\ the\ imaginary\ part\ of\ this\ complex\ number\r\n
comment14.params=that
comment14.target=Complex\ divides(Complex)
comment14.text=\r\n\ Returns\ the\ result\ of\ dividing\ the\ specified\ complex\ number\ into\r\n\ this\ complex\ number.\r\n\r\n\ @param\ \ that\ the\ other\ complex\ number\r\n\ @return\ the\ complex\ number\ whose\ value\ is\ {@code\ (this\ /\ that)}\r\n
comment15.params=
comment15.target=Complex\ exp()
comment15.text=\r\n\ Returns\ the\ complex\ exponential\ of\ this\ complex\ number.\r\n\r\n\ @return\ the\ complex\ exponential\ of\ this\ complex\ number\r\n
comment16.params=
comment16.target=Complex\ sin()
comment16.text=\r\n\ Returns\ the\ complex\ sine\ of\ this\ complex\ number.\r\n\r\n\ @return\ the\ complex\ sine\ of\ this\ complex\ number\r\n
comment17.params=
comment17.target=Complex\ cos()
comment17.text=\r\n\ Returns\ the\ complex\ cosine\ of\ this\ complex\ number.\r\n\r\n\ @return\ the\ complex\ cosine\ of\ this\ complex\ number\r\n
comment18.params=
comment18.target=Complex\ tan()
comment18.text=\r\n\ Returns\ the\ complex\ tangent\ of\ this\ complex\ number.\r\n\r\n\ @return\ the\ complex\ tangent\ of\ this\ complex\ number\r\n
comment19.params=args
comment19.target=void\ main(java.lang.String[])
comment19.text=\r\n\ Unit\ tests\ the\ {@code\ Complex}\ data\ type.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\r\n\ Returns\ a\ string\ representation\ of\ this\ complex\ number.\r\n\r\n\ @return\ a\ string\ representation\ of\ this\ complex\ number,\r\n\ \ \ \ \ \ \ \ \ of\ the\ form\ 34\ -\ 56i.\r\n
comment3.params=
comment3.target=double\ abs()
comment3.text=\r\n\ Returns\ the\ absolute\ value\ of\ this\ complex\ number.\r\n\ This\ quantity\ is\ also\ known\ as\ the\ <em>modulus</em>\ or\ <em>magnitude</em>.\r\n\r\n\ @return\ the\ absolute\ value\ of\ this\ complex\ number\r\n
comment4.params=
comment4.target=double\ phase()
comment4.text=\r\n\ Returns\ the\ phase\ of\ this\ complex\ number.\r\n\ This\ quantity\ is\ also\ known\ as\ the\ <em>angle</em>\ or\ <em>argument</em>.\r\n\r\n\ @return\ the\ phase\ of\ this\ complex\ number,\ a\ real\ number\ between\ -pi\ and\ pi\r\n
comment5.params=that
comment5.target=Complex\ plus(Complex)
comment5.text=\r\n\ Returns\ the\ sum\ of\ this\ complex\ number\ and\ the\ specified\ complex\ number.\r\n\r\n\ @param\ \ that\ the\ other\ complex\ number\r\n\ @return\ the\ complex\ number\ whose\ value\ is\ {@code\ (this\ +\ that)}\r\n
comment6.params=that
comment6.target=Complex\ minus(Complex)
comment6.text=\r\n\ Returns\ the\ result\ of\ subtracting\ the\ specified\ complex\ number\ from\r\n\ this\ complex\ number.\r\n\r\n\ @param\ \ that\ the\ other\ complex\ number\r\n\ @return\ the\ complex\ number\ whose\ value\ is\ {@code\ (this\ -\ that)}\r\n
comment7.params=that
comment7.target=Complex\ times(Complex)
comment7.text=\r\n\ Returns\ the\ product\ of\ this\ complex\ number\ and\ the\ specified\ complex\ number.\r\n\r\n\ @param\ \ that\ the\ other\ complex\ number\r\n\ @return\ the\ complex\ number\ whose\ value\ is\ {@code\ (this\ *\ that)}\r\n
comment8.params=alpha
comment8.target=Complex\ scale(double)
comment8.text=\r\n\ Returns\ the\ product\ of\ this\ complex\ number\ and\ the\ specified\ scalar.\r\n\r\n\ @param\ \ alpha\ the\ scalar\r\n\ @return\ the\ complex\ number\ whose\ value\ is\ {@code\ (alpha\ *\ this)}\r\n
comment9.params=alpha
comment9.target=Complex\ times(double)
comment9.text=\r\n\ Returns\ the\ product\ of\ this\ complex\ number\ and\ the\ specified\ scalar.\r\n\r\n\ @param\ \ alpha\ the\ scalar\r\n\ @return\ the\ complex\ number\ whose\ value\ is\ {@code\ (alpha\ *\ this)}\r\n\ @deprecated\ Replaced\ by\ {@link\ \#scale(double)}.\r\n
numComments=20
