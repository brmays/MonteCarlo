#BlueJ class context
comment0.target=Out
comment0.text=\r\n\ \ This\ class\ provides\ methods\ for\ writing\ strings\ and\ numbers\ to\r\n\ \ various\ output\ streams,\ including\ standard\ output,\ file,\ and\ sockets.\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\ see\r\n\ \ <a\ href\="https\://introcs.cs.princeton.edu/31datatype">Section\ 3.1</a>\ of\r\n\ \ <i>Computer\ Science\:\ An\ Interdisciplinary\ Approach</i>\r\n\ \ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=os
comment1.target=Out(java.io.OutputStream)
comment1.text=\r\n\ Initializes\ an\ output\ stream\ from\ a\ {@link\ OutputStream}.\r\n\r\n\ @param\ \ os\ the\ {@code\ OutputStream}\r\n
comment10.params=x
comment10.target=void\ println(double)
comment10.text=\r\n\ Prints\ a\ double\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\r\n\r\n\ @param\ x\ the\ double\ to\ print\r\n
comment11.params=x
comment11.target=void\ println(float)
comment11.text=\r\n\ Prints\ a\ float\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\r\n\r\n\ @param\ x\ the\ float\ to\ print\r\n
comment12.params=x
comment12.target=void\ println(int)
comment12.text=\r\n\ Prints\ an\ integer\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\r\n\r\n\ @param\ x\ the\ integer\ to\ print\r\n
comment13.params=x
comment13.target=void\ println(long)
comment13.text=\r\n\ Prints\ a\ long\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\r\n\r\n\ @param\ x\ the\ long\ to\ print\r\n
comment14.params=x
comment14.target=void\ println(byte)
comment14.text=\r\n\ Prints\ a\ byte\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\r\n\ <p>\r\n\ To\ write\ binary\ data,\ see\ {@link\ BinaryOut}.\r\n\r\n\ @param\ x\ the\ byte\ to\ print\r\n
comment15.params=
comment15.target=void\ print()
comment15.text=\r\n\ Flushes\ this\ output\ stream.\r\n
comment16.params=x
comment16.target=void\ print(java.lang.Object)
comment16.text=\r\n\ Prints\ an\ object\ to\ this\ output\ stream\ and\ flushes\ this\ output\ stream.\r\n\ \r\n\ @param\ x\ the\ object\ to\ print\r\n
comment17.params=x
comment17.target=void\ print(boolean)
comment17.text=\r\n\ Prints\ a\ boolean\ to\ this\ output\ stream\ and\ flushes\ this\ output\ stream.\r\n\ \r\n\ @param\ x\ the\ boolean\ to\ print\r\n
comment18.params=x
comment18.target=void\ print(char)
comment18.text=\r\n\ Prints\ a\ character\ to\ this\ output\ stream\ and\ flushes\ this\ output\ stream.\r\n\ \r\n\ @param\ x\ the\ character\ to\ print\r\n
comment19.params=x
comment19.target=void\ print(double)
comment19.text=\r\n\ Prints\ a\ double\ to\ this\ output\ stream\ and\ flushes\ this\ output\ stream.\r\n\ \r\n\ @param\ x\ the\ double\ to\ print\r\n
comment2.params=
comment2.target=Out()
comment2.text=\r\n\ Initializes\ an\ output\ stream\ from\ standard\ output.\r\n
comment20.params=x
comment20.target=void\ print(float)
comment20.text=\r\n\ Prints\ a\ float\ to\ this\ output\ stream\ and\ flushes\ this\ output\ stream.\r\n\ \r\n\ @param\ x\ the\ float\ to\ print\r\n
comment21.params=x
comment21.target=void\ print(int)
comment21.text=\r\n\ Prints\ an\ integer\ to\ this\ output\ stream\ and\ flushes\ this\ output\ stream.\r\n\ \r\n\ @param\ x\ the\ integer\ to\ print\r\n
comment22.params=x
comment22.target=void\ print(long)
comment22.text=\r\n\ Prints\ a\ long\ integer\ to\ this\ output\ stream\ and\ flushes\ this\ output\ stream.\r\n\ \r\n\ @param\ x\ the\ long\ integer\ to\ print\r\n
comment23.params=x
comment23.target=void\ print(byte)
comment23.text=\r\n\ Prints\ a\ byte\ to\ this\ output\ stream\ and\ flushes\ this\ output\ stream.\r\n\ \r\n\ @param\ x\ the\ byte\ to\ print\r\n
comment24.params=format\ args
comment24.target=void\ printf(java.lang.String,\ java.lang.Object[])
comment24.text=\r\n\ Prints\ a\ formatted\ string\ to\ this\ output\ stream,\ using\ the\ specified\ format\r\n\ string\ and\ arguments,\ and\ then\ flushes\ this\ output\ stream.\r\n\r\n\ @param\ format\ the\ format\ string\r\n\ @param\ args\ \ \ the\ arguments\ accompanying\ the\ format\ string\r\n
comment25.params=locale\ format\ args
comment25.target=void\ printf(java.util.Locale,\ java.lang.String,\ java.lang.Object[])
comment25.text=\r\n\ Prints\ a\ formatted\ string\ to\ this\ output\ stream,\ using\ the\ specified\r\n\ locale,\ format\ string,\ and\ arguments,\ and\ then\ flushes\ this\ output\ stream.\r\n\r\n\ @param\ locale\ the\ locale\r\n\ @param\ format\ the\ format\ string\r\n\ @param\ args\ \ \ the\ arguments\ accompanying\ the\ format\ string\r\n
comment26.params=args
comment26.target=void\ main(java.lang.String[])
comment26.text=\r\n\ A\ test\ client.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
comment3.params=socket
comment3.target=Out(java.net.Socket)
comment3.text=\r\n\ Initializes\ an\ output\ stream\ from\ a\ socket.\r\n\r\n\ @param\ \ socket\ the\ socket\r\n
comment4.params=filename
comment4.target=Out(java.lang.String)
comment4.text=\r\n\ Initializes\ an\ output\ stream\ from\ a\ file.\r\n\r\n\ @param\ \ filename\ the\ name\ of\ the\ file\r\n
comment5.params=
comment5.target=void\ close()
comment5.text=\r\n\ Closes\ the\ output\ stream.\r\n
comment6.params=
comment6.target=void\ println()
comment6.text=\r\n\ Terminates\ the\ current\ line\ by\ printing\ the\ line-separator\ string.\r\n
comment7.params=x
comment7.target=void\ println(java.lang.Object)
comment7.text=\r\n\ Prints\ an\ object\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\r\n\r\n\ @param\ x\ the\ object\ to\ print\r\n
comment8.params=x
comment8.target=void\ println(boolean)
comment8.text=\r\n\ Prints\ a\ boolean\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\r\n\r\n\ @param\ x\ the\ boolean\ to\ print\r\n
comment9.params=x
comment9.target=void\ println(char)
comment9.text=\r\n\ Prints\ a\ character\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\r\n\r\n\ @param\ x\ the\ character\ to\ print\r\n
numComments=27
