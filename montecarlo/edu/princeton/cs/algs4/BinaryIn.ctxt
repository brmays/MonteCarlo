#BlueJ class context
comment0.target=BinaryIn
comment0.text=\r\n\ \ <i>Binary\ input</i>.\ This\ class\ provides\ methods\ for\ reading\r\n\ \ in\ bits\ from\ a\ binary\ input\ stream,\ either\r\n\ \ one\ bit\ at\ a\ time\ (as\ a\ {@code\ boolean}),\r\n\ \ 8\ bits\ at\ a\ time\ (as\ a\ {@code\ byte}\ or\ {@code\ char}),\r\n\ \ 16\ bits\ at\ a\ time\ (as\ a\ {@code\ short}),\r\n\ \ 32\ bits\ at\ a\ time\ (as\ an\ {@code\ int}\ or\ {@code\ float}),\ or\r\n\ \ 64\ bits\ at\ a\ time\ (as\ a\ {@code\ double}\ or\ {@code\ long}).\r\n\ \ <p>\r\n\ \ The\ binary\ input\ stream\ can\ be\ from\ standard\ input,\ a\ filename,\r\n\ \ a\ URL\ name,\ a\ Socket,\ or\ an\ InputStream.\r\n\ \ <p>\r\n\ \ All\ primitive\ types\ are\ assumed\ to\ be\ represented\ using\ their\ \r\n\ \ standard\ Java\ representations,\ in\ big-endian\ (most\ significant\r\n\ \ byte\ first)\ order.\r\n\ \ <p>\r\n\ \ The\ client\ should\ not\ intermix\ calls\ to\ {@code\ BinaryIn}\ with\ calls\r\n\ \ to\ {@code\ In};\ otherwise\ unexpected\ behavior\ will\ result.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=
comment1.target=BinaryIn()
comment1.text=\r\n\ Initializes\ a\ binary\ input\ stream\ from\ standard\ input.\r\n
comment10.params=
comment10.target=char\ readChar()
comment10.text=\r\n\ Reads\ the\ next\ 8\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ an\ 8-bit\ char.\r\n\r\n\ @return\ the\ next\ 8\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ char}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 8\ bits\ available\r\n
comment11.params=r
comment11.target=char\ readChar(int)
comment11.text=\r\n\ Reads\ the\ next\ r\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ an\ r-bit\ character.\r\n\r\n\ @param\ \ r\ number\ of\ bits\ to\ read\r\n\ @return\ the\ next\ {@code\ r}\ bits\ of\ data\ from\ this\ binary\ input\ streamt\ as\ a\ {@code\ char}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ {@code\ r}\ bits\ available\r\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 1\ <\=\ r\ <\=\ 16}\r\n
comment12.params=
comment12.target=java.lang.String\ readString()
comment12.text=\r\n\ Reads\ the\ remaining\ bytes\ of\ data\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ string.\ \r\n\r\n\ @return\ the\ remaining\ bytes\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ String}\r\n\ @throws\ NoSuchElementException\ if\ this\ binary\ input\ stream\ is\ empty\ or\ if\ the\ number\ of\ bits\r\n\ \ \ \ \ \ \ \ \ available\ is\ not\ a\ multiple\ of\ 8\ (byte-aligned)\r\n
comment13.params=
comment13.target=short\ readShort()
comment13.text=\r\n\ Reads\ the\ next\ 16\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 16-bit\ short.\r\n\r\n\ @return\ the\ next\ 16\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ short}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 16\ bits\ available\r\n
comment14.params=
comment14.target=int\ readInt()
comment14.text=\r\n\ Reads\ the\ next\ 32\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 32-bit\ int.\r\n\r\n\ @return\ the\ next\ 32\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ int}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 32\ bits\ available\r\n
comment15.params=r
comment15.target=int\ readInt(int)
comment15.text=\r\n\ Reads\ the\ next\ r\ bits\ from\ this\ binary\ input\ stream\ return\ as\ an\ r-bit\ int.\r\n\r\n\ @param\ \ r\ number\ of\ bits\ to\ read\r\n\ @return\ the\ next\ {@code\ r}\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ int}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ r\ bits\ available\r\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 1\ <\=\ r\ <\=\ 32}\r\n
comment16.params=
comment16.target=long\ readLong()
comment16.text=\r\n\ Reads\ the\ next\ 64\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 64-bit\ long.\r\n\r\n\ @return\ the\ next\ 64\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ long}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 64\ bits\ available\r\n
comment17.params=
comment17.target=double\ readDouble()
comment17.text=\r\n\ Reads\ the\ next\ 64\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 64-bit\ double.\r\n\r\n\ @return\ the\ next\ 64\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ double}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 64\ bits\ available\r\n
comment18.params=
comment18.target=float\ readFloat()
comment18.text=\r\n\ Reads\ the\ next\ 32\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ 32-bit\ float.\r\n\r\n\ @return\ the\ next\ 32\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ float}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 32\ bits\ available\r\n
comment19.params=
comment19.target=byte\ readByte()
comment19.text=\r\n\ Reads\ the\ next\ 8\ bits\ from\ this\ binary\ input\ stream\ and\ return\ as\ an\ 8-bit\ byte.\r\n\r\n\ @return\ the\ next\ 8\ bits\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ byte}\r\n\ @throws\ NoSuchElementException\ if\ there\ are\ fewer\ than\ 8\ bits\ available\r\n
comment2.params=is
comment2.target=BinaryIn(java.io.InputStream)
comment2.text=\r\n\ Initializes\ a\ binary\ input\ stream\ from\ an\ {@code\ InputStream}.\r\n\r\n\ @param\ is\ the\ {@code\ InputStream}\ object\r\n
comment20.params=args
comment20.target=void\ main(java.lang.String[])
comment20.text=\r\n\ Unit\ tests\ the\ {@code\ BinaryIn}\ data\ type.\r\n\ Reads\ the\ name\ of\ a\ file\ or\ URL\ (first\ command-line\ argument)\r\n\ and\ writes\ it\ to\ a\ file\ (second\ command-line\ argument).\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
comment3.params=socket
comment3.target=BinaryIn(java.net.Socket)
comment3.text=\r\n\ Initializes\ a\ binary\ input\ stream\ from\ a\ socket.\r\n\r\n\ @param\ socket\ the\ socket\r\n
comment4.params=url
comment4.target=BinaryIn(java.net.URL)
comment4.text=\r\n\ Initializes\ a\ binary\ input\ stream\ from\ a\ URL.\r\n\r\n\ @param\ url\ the\ URL\r\n
comment5.params=name
comment5.target=BinaryIn(java.lang.String)
comment5.text=\r\n\ Initializes\ a\ binary\ input\ stream\ from\ a\ filename\ or\ URL\ name.\r\n\r\n\ @param\ name\ the\ name\ of\ the\ file\ or\ URL\r\n
comment6.params=
comment6.target=void\ fillBuffer()
comment7.params=
comment7.target=boolean\ exists()
comment7.text=\r\n\ Returns\ true\ if\ this\ binary\ input\ stream\ exists.\r\n\r\n\ @return\ {@code\ true}\ if\ this\ binary\ input\ stream\ exists;\r\n\ \ \ \ \ \ \ \ \ {@code\ false}\ otherwise\r\n
comment8.params=
comment8.target=boolean\ isEmpty()
comment8.text=\r\n\ Returns\ true\ if\ this\ binary\ input\ stream\ is\ empty.\r\n\r\n\ @return\ {@code\ true}\ if\ this\ binary\ input\ stream\ is\ empty;\r\n\ \ \ \ \ \ \ \ \ {@code\ false}\ otherwise\r\n
comment9.params=
comment9.target=boolean\ readBoolean()
comment9.text=\r\n\ Reads\ the\ next\ bit\ of\ data\ from\ this\ binary\ input\ stream\ and\ return\ as\ a\ boolean.\r\n\r\n\ @return\ the\ next\ bit\ of\ data\ from\ this\ binary\ input\ stream\ as\ a\ {@code\ boolean}\r\n\ @throws\ NoSuchElementException\ if\ this\ binary\ input\ stream\ is\ empty\r\n
numComments=21
